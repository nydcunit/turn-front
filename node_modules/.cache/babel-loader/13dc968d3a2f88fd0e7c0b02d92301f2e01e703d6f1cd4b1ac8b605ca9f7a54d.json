{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Device = void 0;\nexports.detectDeviceAsync = detectDeviceAsync;\nexports.detectDevice = detectDevice;\nconst ua_parser_js_1 = require(\"ua-parser-js\");\nconst Logger_1 = require(\"./Logger\");\nconst enhancedEvents_1 = require(\"./enhancedEvents\");\nconst errors_1 = require(\"./errors\");\nconst utils = require(\"./utils\");\nconst ortc = require(\"./ortc\");\nconst Transport_1 = require(\"./Transport\");\nconst Chrome111_1 = require(\"./handlers/Chrome111\");\nconst Chrome74_1 = require(\"./handlers/Chrome74\");\nconst Chrome70_1 = require(\"./handlers/Chrome70\");\nconst Chrome67_1 = require(\"./handlers/Chrome67\");\nconst Chrome55_1 = require(\"./handlers/Chrome55\");\nconst Firefox120_1 = require(\"./handlers/Firefox120\");\nconst Firefox60_1 = require(\"./handlers/Firefox60\");\nconst Safari12_1 = require(\"./handlers/Safari12\");\nconst Safari11_1 = require(\"./handlers/Safari11\");\nconst Edge11_1 = require(\"./handlers/Edge11\");\nconst ReactNativeUnifiedPlan_1 = require(\"./handlers/ReactNativeUnifiedPlan\");\nconst ReactNative_1 = require(\"./handlers/ReactNative\");\nconst logger = new Logger_1.Logger('Device');\n/**\n * Async mediasoup-client Handler detection. More powerful than\n * `detectDevice()`.\n */\nasync function detectDeviceAsync(userAgent) {\n  logger.debug('detectDeviceAsync() [userAgent:%s]', userAgent);\n  if (!userAgent && typeof navigator === 'object') {\n    userAgent = navigator.userAgent;\n  }\n  const uaParserResult = await (0, ua_parser_js_1.UAParser)(userAgent).withFeatureCheck();\n  return detectDeviceImpl(uaParserResult);\n}\n/**\n * Sync mediasoup-client Handler detection.\n *\n * @deprecated It only relies on navigator.userAgent. Use `detectDeviceAsync()`\n * instead.\n */\nfunction detectDevice(userAgent) {\n  logger.debug('detectDevice() [userAgent:%s]', userAgent);\n  if (!userAgent && typeof navigator === 'object') {\n    userAgent = navigator.userAgent;\n  }\n  const uaParserResult = (0, ua_parser_js_1.UAParser)(userAgent);\n  return detectDeviceImpl(uaParserResult);\n}\nclass Device {\n  // RTC handler factory.\n  _handlerFactory;\n  // Handler name.\n  _handlerName;\n  // Loaded flag.\n  _loaded = false;\n  // Extended RTP capabilities.\n  _extendedRtpCapabilities;\n  // Local RTP capabilities for receiving media.\n  _recvRtpCapabilities;\n  // Whether we can produce audio/video based on computed extended RTP\n  // capabilities.\n  _canProduceByKind;\n  // Local SCTP capabilities.\n  _sctpCapabilities;\n  // Observer instance.\n  _observer = new enhancedEvents_1.EnhancedEventEmitter();\n  /**\n   * Create a new Device to connect to mediasoup server. It uses a more advanced\n   * device detection.\n   *\n   * @throws {UnsupportedError} if device is not supported.\n   */\n  static async factory({\n    handlerName,\n    handlerFactory\n  } = {}) {\n    logger.debug('factory()');\n    if (handlerName && handlerFactory) {\n      throw new TypeError('just one of handlerName or handlerInterface can be given');\n    }\n    if (!handlerName && !handlerFactory) {\n      handlerName = await detectDeviceAsync();\n      if (!handlerName) {\n        throw new errors_1.UnsupportedError('device not supported');\n      }\n    }\n    return new Device({\n      handlerName,\n      handlerFactory\n    });\n  }\n  /**\n   * Create a new Device to connect to mediasoup server.\n   *\n   * @throws {UnsupportedError} if device is not supported.\n   */\n  constructor({\n    handlerName,\n    handlerFactory\n  } = {}) {\n    logger.debug('constructor()');\n    if (handlerName && handlerFactory) {\n      throw new TypeError('just one of handlerName or handlerInterface can be given');\n    }\n    if (handlerFactory) {\n      this._handlerFactory = handlerFactory;\n    } else {\n      if (handlerName) {\n        logger.debug('constructor() | handler given: %s', handlerName);\n      } else {\n        handlerName = detectDevice();\n        if (handlerName) {\n          logger.debug('constructor() | detected handler: %s', handlerName);\n        } else {\n          throw new errors_1.UnsupportedError('device not supported');\n        }\n      }\n      switch (handlerName) {\n        case 'Chrome111':\n          {\n            this._handlerFactory = Chrome111_1.Chrome111.createFactory();\n            break;\n          }\n        case 'Chrome74':\n          {\n            this._handlerFactory = Chrome74_1.Chrome74.createFactory();\n            break;\n          }\n        case 'Chrome70':\n          {\n            this._handlerFactory = Chrome70_1.Chrome70.createFactory();\n            break;\n          }\n        case 'Chrome67':\n          {\n            this._handlerFactory = Chrome67_1.Chrome67.createFactory();\n            break;\n          }\n        case 'Chrome55':\n          {\n            this._handlerFactory = Chrome55_1.Chrome55.createFactory();\n            break;\n          }\n        case 'Firefox120':\n          {\n            this._handlerFactory = Firefox120_1.Firefox120.createFactory();\n            break;\n          }\n        case 'Firefox60':\n          {\n            this._handlerFactory = Firefox60_1.Firefox60.createFactory();\n            break;\n          }\n        case 'Safari12':\n          {\n            this._handlerFactory = Safari12_1.Safari12.createFactory();\n            break;\n          }\n        case 'Safari11':\n          {\n            this._handlerFactory = Safari11_1.Safari11.createFactory();\n            break;\n          }\n        case 'Edge11':\n          {\n            this._handlerFactory = Edge11_1.Edge11.createFactory();\n            break;\n          }\n        case 'ReactNativeUnifiedPlan':\n          {\n            this._handlerFactory = ReactNativeUnifiedPlan_1.ReactNativeUnifiedPlan.createFactory();\n            break;\n          }\n        case 'ReactNative':\n          {\n            this._handlerFactory = ReactNative_1.ReactNative.createFactory();\n            break;\n          }\n        default:\n          {\n            throw new TypeError(`unknown handlerName \"${handlerName}\"`);\n          }\n      }\n    }\n    // Create a temporal handler to get its name.\n    const handler = this._handlerFactory();\n    this._handlerName = handler.name;\n    handler.close();\n    this._extendedRtpCapabilities = undefined;\n    this._recvRtpCapabilities = undefined;\n    this._canProduceByKind = {\n      audio: false,\n      video: false\n    };\n    this._sctpCapabilities = undefined;\n  }\n  /**\n   * The RTC handler name.\n   */\n  get handlerName() {\n    return this._handlerName;\n  }\n  /**\n   * Whether the Device is loaded.\n   */\n  get loaded() {\n    return this._loaded;\n  }\n  /**\n   * RTP capabilities of the Device for receiving media.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   */\n  get rtpCapabilities() {\n    if (!this._loaded) {\n      throw new errors_1.InvalidStateError('not loaded');\n    }\n    return this._recvRtpCapabilities;\n  }\n  /**\n   * SCTP capabilities of the Device.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   */\n  get sctpCapabilities() {\n    if (!this._loaded) {\n      throw new errors_1.InvalidStateError('not loaded');\n    }\n    return this._sctpCapabilities;\n  }\n  get observer() {\n    return this._observer;\n  }\n  /**\n   * Initialize the Device.\n   */\n  async load({\n    routerRtpCapabilities,\n    preferLocalCodecsOrder = false\n  }) {\n    logger.debug('load() [routerRtpCapabilities:%o]', routerRtpCapabilities);\n    // Temporal handler to get its capabilities.\n    let handler;\n    try {\n      if (this._loaded) {\n        throw new errors_1.InvalidStateError('already loaded');\n      }\n      // Clone given router RTP capabilities to not modify input data.\n      const clonedRouterRtpCapabilities = utils.clone(routerRtpCapabilities);\n      // This may throw.\n      ortc.validateRtpCapabilities(clonedRouterRtpCapabilities);\n      handler = this._handlerFactory();\n      const nativeRtpCapabilities = await handler.getNativeRtpCapabilities();\n      logger.debug('load() | got native RTP capabilities:%o', nativeRtpCapabilities);\n      // Clone obtained native RTP capabilities to not modify input data.\n      const clonedNativeRtpCapabilities = utils.clone(nativeRtpCapabilities);\n      // This may throw.\n      ortc.validateRtpCapabilities(clonedNativeRtpCapabilities);\n      // Get extended RTP capabilities.\n      this._extendedRtpCapabilities = ortc.getExtendedRtpCapabilities(clonedNativeRtpCapabilities, clonedRouterRtpCapabilities, preferLocalCodecsOrder);\n      logger.debug('load() | got extended RTP capabilities:%o', this._extendedRtpCapabilities);\n      // Check whether we can produce audio/video.\n      this._canProduceByKind.audio = ortc.canSend('audio', this._extendedRtpCapabilities);\n      this._canProduceByKind.video = ortc.canSend('video', this._extendedRtpCapabilities);\n      // Generate our receiving RTP capabilities for receiving media.\n      this._recvRtpCapabilities = ortc.getRecvRtpCapabilities(this._extendedRtpCapabilities);\n      // This may throw.\n      ortc.validateRtpCapabilities(this._recvRtpCapabilities);\n      logger.debug('load() | got receiving RTP capabilities:%o', this._recvRtpCapabilities);\n      // Generate our SCTP capabilities.\n      this._sctpCapabilities = await handler.getNativeSctpCapabilities();\n      logger.debug('load() | got native SCTP capabilities:%o', this._sctpCapabilities);\n      // This may throw.\n      ortc.validateSctpCapabilities(this._sctpCapabilities);\n      logger.debug('load() succeeded');\n      this._loaded = true;\n      handler.close();\n    } catch (error) {\n      if (handler) {\n        handler.close();\n      }\n      throw error;\n    }\n  }\n  /**\n   * Whether we can produce audio/video.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   * @throws {TypeError} if wrong arguments.\n   */\n  canProduce(kind) {\n    if (!this._loaded) {\n      throw new errors_1.InvalidStateError('not loaded');\n    } else if (kind !== 'audio' && kind !== 'video') {\n      throw new TypeError(`invalid kind \"${kind}\"`);\n    }\n    return this._canProduceByKind[kind];\n  }\n  /**\n   * Creates a Transport for sending media.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   * @throws {TypeError} if wrong arguments.\n   */\n  createSendTransport({\n    id,\n    iceParameters,\n    iceCandidates,\n    dtlsParameters,\n    sctpParameters,\n    iceServers,\n    iceTransportPolicy,\n    additionalSettings,\n    proprietaryConstraints,\n    appData\n  }) {\n    logger.debug('createSendTransport()');\n    return this.createTransport({\n      direction: 'send',\n      id: id,\n      iceParameters: iceParameters,\n      iceCandidates: iceCandidates,\n      dtlsParameters: dtlsParameters,\n      sctpParameters: sctpParameters,\n      iceServers: iceServers,\n      iceTransportPolicy: iceTransportPolicy,\n      additionalSettings: additionalSettings,\n      proprietaryConstraints: proprietaryConstraints,\n      appData: appData\n    });\n  }\n  /**\n   * Creates a Transport for receiving media.\n   *\n   * @throws {InvalidStateError} if not loaded.\n   * @throws {TypeError} if wrong arguments.\n   */\n  createRecvTransport({\n    id,\n    iceParameters,\n    iceCandidates,\n    dtlsParameters,\n    sctpParameters,\n    iceServers,\n    iceTransportPolicy,\n    additionalSettings,\n    proprietaryConstraints,\n    appData\n  }) {\n    logger.debug('createRecvTransport()');\n    return this.createTransport({\n      direction: 'recv',\n      id: id,\n      iceParameters: iceParameters,\n      iceCandidates: iceCandidates,\n      dtlsParameters: dtlsParameters,\n      sctpParameters: sctpParameters,\n      iceServers: iceServers,\n      iceTransportPolicy: iceTransportPolicy,\n      additionalSettings: additionalSettings,\n      proprietaryConstraints: proprietaryConstraints,\n      appData: appData\n    });\n  }\n  createTransport({\n    direction,\n    id,\n    iceParameters,\n    iceCandidates,\n    dtlsParameters,\n    sctpParameters,\n    iceServers,\n    iceTransportPolicy,\n    additionalSettings,\n    proprietaryConstraints,\n    appData\n  }) {\n    if (!this._loaded) {\n      throw new errors_1.InvalidStateError('not loaded');\n    } else if (typeof id !== 'string') {\n      throw new TypeError('missing id');\n    } else if (typeof iceParameters !== 'object') {\n      throw new TypeError('missing iceParameters');\n    } else if (!Array.isArray(iceCandidates)) {\n      throw new TypeError('missing iceCandidates');\n    } else if (typeof dtlsParameters !== 'object') {\n      throw new TypeError('missing dtlsParameters');\n    } else if (sctpParameters && typeof sctpParameters !== 'object') {\n      throw new TypeError('wrong sctpParameters');\n    } else if (appData && typeof appData !== 'object') {\n      throw new TypeError('if given, appData must be an object');\n    }\n    // Create a new Transport.\n    const transport = new Transport_1.Transport({\n      direction,\n      id,\n      iceParameters,\n      iceCandidates,\n      dtlsParameters,\n      sctpParameters,\n      iceServers,\n      iceTransportPolicy,\n      additionalSettings,\n      proprietaryConstraints,\n      appData,\n      handlerFactory: this._handlerFactory,\n      extendedRtpCapabilities: this._extendedRtpCapabilities,\n      canProduceByKind: this._canProduceByKind\n    });\n    // Emit observer event.\n    this._observer.safeEmit('newtransport', transport);\n    return transport;\n  }\n}\nexports.Device = Device;\nfunction detectDeviceImpl(uaParserResult) {\n  // React-Native.\n  // NOTE: react-native-webrtc >= 1.75.0 is required.\n  // NOTE: For Unified-Plan support, react-native-webrtc version >= 106.0.0 is\n  // required.\n  if (typeof navigator === 'object' && navigator.product === 'ReactNative') {\n    logger.debug('detectDeviceImpl() | React-Native detected');\n    if (typeof RTCPeerConnection === 'undefined') {\n      logger.warn('detectDeviceImpl() | unsupported react-native-webrtc without RTCPeerConnection, forgot to call registerGlobals()?');\n      return undefined;\n    }\n    if (typeof RTCRtpTransceiver !== 'undefined') {\n      logger.debug('detectDeviceImpl() | ReactNative UnifiedPlan handler chosen');\n      return 'ReactNativeUnifiedPlan';\n    } else {\n      logger.debug('detectDeviceImpl() | ReactNative PlanB handler chosen');\n      return 'ReactNative';\n    }\n  }\n  // Browser.\n  else {\n    logger.debug('detectDeviceImpl() | browser detected [userAgent:%s, parsed:%o]', uaParserResult.ua, uaParserResult);\n    const browser = uaParserResult.browser;\n    const browserName = browser.name?.toLowerCase();\n    const browserVersion = parseInt(browser.major ?? '0');\n    const engine = uaParserResult.engine;\n    const engineName = engine.name?.toLowerCase();\n    const os = uaParserResult.os;\n    const osName = os.name?.toLowerCase();\n    const osVersion = parseFloat(os.version ?? '0');\n    const device = uaParserResult.device;\n    const deviceModel = device.model?.toLowerCase();\n    const isIOS = osName === 'ios' || deviceModel === 'ipad';\n    const isChrome = browserName && ['chrome', 'chromium', 'mobile chrome', 'chrome webview', 'chrome headless'].includes(browserName);\n    const isFirefox = browserName && ['firefox', 'mobile firefox', 'mobile focus'].includes(browserName);\n    const isSafari = browserName && ['safari', 'mobile safari'].includes(browserName);\n    const isEdge = browserName && ['edge'].includes(browserName);\n    // Chrome, Chromium, and Edge.\n    if ((isChrome || isEdge) && !isIOS && browserVersion >= 111) {\n      return 'Chrome111';\n    } else if (isChrome && !isIOS && browserVersion >= 74 || isEdge && !isIOS && browserVersion >= 88) {\n      return 'Chrome74';\n    } else if (isChrome && !isIOS && browserVersion >= 70) {\n      return 'Chrome70';\n    } else if (isChrome && !isIOS && browserVersion >= 67) {\n      return 'Chrome67';\n    } else if (isChrome && !isIOS && browserVersion >= 55) {\n      return 'Chrome55';\n    }\n    // Firefox.\n    else if (isFirefox && !isIOS && browserVersion >= 120) {\n      return 'Firefox120';\n    } else if (isFirefox && !isIOS && browserVersion >= 60) {\n      return 'Firefox60';\n    }\n    // Firefox on iOS (so Safari).\n    else if (isFirefox && isIOS && osVersion >= 14.3) {\n      return 'Safari12';\n    }\n    // Safari with Unified-Plan support enabled.\n    else if (isSafari && browserVersion >= 12 && typeof RTCRtpTransceiver !== 'undefined' && RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n      return 'Safari12';\n    }\n    // Safari with Plab-B support.\n    else if (isSafari && browserVersion >= 11) {\n      return 'Safari11';\n    }\n    // Old Edge with ORTC support.\n    else if (isEdge && !isIOS && browserVersion >= 11 && browserVersion <= 18) {\n      return 'Edge11';\n    }\n    // Best effort for WebKit based browsers in iOS.\n    else if (engineName === 'webkit' && isIOS && typeof RTCRtpTransceiver !== 'undefined' && RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n      return 'Safari12';\n    }\n    // Best effort for Chromium based browsers.\n    else if (engineName === 'blink') {\n      // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n      const match = uaParserResult.ua.match(/(?:(?:Chrome|Chromium))[ /](\\w+)/i);\n      if (match) {\n        const version = Number(match[1]);\n        if (version >= 111) {\n          return 'Chrome111';\n        } else if (version >= 74) {\n          return 'Chrome74';\n        } else if (version >= 70) {\n          return 'Chrome70';\n        } else if (version >= 67) {\n          return 'Chrome67';\n        } else {\n          return 'Chrome55';\n        }\n      } else {\n        return 'Chrome111';\n      }\n    }\n    // Unsupported browser.\n    else {\n      logger.warn('detectDeviceImpl() | browser not supported [name:%s, version:%s]', browserName, browserVersion);\n      return undefined;\n    }\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Device","detectDeviceAsync","detectDevice","ua_parser_js_1","require","Logger_1","enhancedEvents_1","errors_1","utils","ortc","Transport_1","Chrome111_1","Chrome74_1","Chrome70_1","Chrome67_1","Chrome55_1","Firefox120_1","Firefox60_1","Safari12_1","Safari11_1","Edge11_1","ReactNativeUnifiedPlan_1","ReactNative_1","logger","Logger","userAgent","debug","navigator","uaParserResult","UAParser","withFeatureCheck","detectDeviceImpl","_handlerFactory","_handlerName","_loaded","_extendedRtpCapabilities","_recvRtpCapabilities","_canProduceByKind","_sctpCapabilities","_observer","EnhancedEventEmitter","factory","handlerName","handlerFactory","TypeError","UnsupportedError","constructor","Chrome111","createFactory","Chrome74","Chrome70","Chrome67","Chrome55","Firefox120","Firefox60","Safari12","Safari11","Edge11","ReactNativeUnifiedPlan","ReactNative","handler","name","close","undefined","audio","video","loaded","rtpCapabilities","InvalidStateError","sctpCapabilities","observer","load","routerRtpCapabilities","preferLocalCodecsOrder","clonedRouterRtpCapabilities","clone","validateRtpCapabilities","nativeRtpCapabilities","getNativeRtpCapabilities","clonedNativeRtpCapabilities","getExtendedRtpCapabilities","canSend","getRecvRtpCapabilities","getNativeSctpCapabilities","validateSctpCapabilities","error","canProduce","kind","createSendTransport","id","iceParameters","iceCandidates","dtlsParameters","sctpParameters","iceServers","iceTransportPolicy","additionalSettings","proprietaryConstraints","appData","createTransport","direction","createRecvTransport","Array","isArray","transport","Transport","extendedRtpCapabilities","canProduceByKind","safeEmit","product","RTCPeerConnection","warn","RTCRtpTransceiver","ua","browser","browserName","toLowerCase","browserVersion","parseInt","major","engine","engineName","os","osName","osVersion","parseFloat","version","device","deviceModel","model","isIOS","isChrome","includes","isFirefox","isSafari","isEdge","prototype","hasOwnProperty","match","Number"],"sources":["/Users/user/turn/turn-front/node_modules/mediasoup-client/lib/Device.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Device = void 0;\nexports.detectDeviceAsync = detectDeviceAsync;\nexports.detectDevice = detectDevice;\nconst ua_parser_js_1 = require(\"ua-parser-js\");\nconst Logger_1 = require(\"./Logger\");\nconst enhancedEvents_1 = require(\"./enhancedEvents\");\nconst errors_1 = require(\"./errors\");\nconst utils = require(\"./utils\");\nconst ortc = require(\"./ortc\");\nconst Transport_1 = require(\"./Transport\");\nconst Chrome111_1 = require(\"./handlers/Chrome111\");\nconst Chrome74_1 = require(\"./handlers/Chrome74\");\nconst Chrome70_1 = require(\"./handlers/Chrome70\");\nconst Chrome67_1 = require(\"./handlers/Chrome67\");\nconst Chrome55_1 = require(\"./handlers/Chrome55\");\nconst Firefox120_1 = require(\"./handlers/Firefox120\");\nconst Firefox60_1 = require(\"./handlers/Firefox60\");\nconst Safari12_1 = require(\"./handlers/Safari12\");\nconst Safari11_1 = require(\"./handlers/Safari11\");\nconst Edge11_1 = require(\"./handlers/Edge11\");\nconst ReactNativeUnifiedPlan_1 = require(\"./handlers/ReactNativeUnifiedPlan\");\nconst ReactNative_1 = require(\"./handlers/ReactNative\");\nconst logger = new Logger_1.Logger('Device');\n/**\n * Async mediasoup-client Handler detection. More powerful than\n * `detectDevice()`.\n */\nasync function detectDeviceAsync(userAgent) {\n    logger.debug('detectDeviceAsync() [userAgent:%s]', userAgent);\n    if (!userAgent && typeof navigator === 'object') {\n        userAgent = navigator.userAgent;\n    }\n    const uaParserResult = await (0, ua_parser_js_1.UAParser)(userAgent).withFeatureCheck();\n    return detectDeviceImpl(uaParserResult);\n}\n/**\n * Sync mediasoup-client Handler detection.\n *\n * @deprecated It only relies on navigator.userAgent. Use `detectDeviceAsync()`\n * instead.\n */\nfunction detectDevice(userAgent) {\n    logger.debug('detectDevice() [userAgent:%s]', userAgent);\n    if (!userAgent && typeof navigator === 'object') {\n        userAgent = navigator.userAgent;\n    }\n    const uaParserResult = (0, ua_parser_js_1.UAParser)(userAgent);\n    return detectDeviceImpl(uaParserResult);\n}\nclass Device {\n    // RTC handler factory.\n    _handlerFactory;\n    // Handler name.\n    _handlerName;\n    // Loaded flag.\n    _loaded = false;\n    // Extended RTP capabilities.\n    _extendedRtpCapabilities;\n    // Local RTP capabilities for receiving media.\n    _recvRtpCapabilities;\n    // Whether we can produce audio/video based on computed extended RTP\n    // capabilities.\n    _canProduceByKind;\n    // Local SCTP capabilities.\n    _sctpCapabilities;\n    // Observer instance.\n    _observer = new enhancedEvents_1.EnhancedEventEmitter();\n    /**\n     * Create a new Device to connect to mediasoup server. It uses a more advanced\n     * device detection.\n     *\n     * @throws {UnsupportedError} if device is not supported.\n     */\n    static async factory({ handlerName, handlerFactory, } = {}) {\n        logger.debug('factory()');\n        if (handlerName && handlerFactory) {\n            throw new TypeError('just one of handlerName or handlerInterface can be given');\n        }\n        if (!handlerName && !handlerFactory) {\n            handlerName = await detectDeviceAsync();\n            if (!handlerName) {\n                throw new errors_1.UnsupportedError('device not supported');\n            }\n        }\n        return new Device({ handlerName, handlerFactory });\n    }\n    /**\n     * Create a new Device to connect to mediasoup server.\n     *\n     * @throws {UnsupportedError} if device is not supported.\n     */\n    constructor({ handlerName, handlerFactory } = {}) {\n        logger.debug('constructor()');\n        if (handlerName && handlerFactory) {\n            throw new TypeError('just one of handlerName or handlerInterface can be given');\n        }\n        if (handlerFactory) {\n            this._handlerFactory = handlerFactory;\n        }\n        else {\n            if (handlerName) {\n                logger.debug('constructor() | handler given: %s', handlerName);\n            }\n            else {\n                handlerName = detectDevice();\n                if (handlerName) {\n                    logger.debug('constructor() | detected handler: %s', handlerName);\n                }\n                else {\n                    throw new errors_1.UnsupportedError('device not supported');\n                }\n            }\n            switch (handlerName) {\n                case 'Chrome111': {\n                    this._handlerFactory = Chrome111_1.Chrome111.createFactory();\n                    break;\n                }\n                case 'Chrome74': {\n                    this._handlerFactory = Chrome74_1.Chrome74.createFactory();\n                    break;\n                }\n                case 'Chrome70': {\n                    this._handlerFactory = Chrome70_1.Chrome70.createFactory();\n                    break;\n                }\n                case 'Chrome67': {\n                    this._handlerFactory = Chrome67_1.Chrome67.createFactory();\n                    break;\n                }\n                case 'Chrome55': {\n                    this._handlerFactory = Chrome55_1.Chrome55.createFactory();\n                    break;\n                }\n                case 'Firefox120': {\n                    this._handlerFactory = Firefox120_1.Firefox120.createFactory();\n                    break;\n                }\n                case 'Firefox60': {\n                    this._handlerFactory = Firefox60_1.Firefox60.createFactory();\n                    break;\n                }\n                case 'Safari12': {\n                    this._handlerFactory = Safari12_1.Safari12.createFactory();\n                    break;\n                }\n                case 'Safari11': {\n                    this._handlerFactory = Safari11_1.Safari11.createFactory();\n                    break;\n                }\n                case 'Edge11': {\n                    this._handlerFactory = Edge11_1.Edge11.createFactory();\n                    break;\n                }\n                case 'ReactNativeUnifiedPlan': {\n                    this._handlerFactory = ReactNativeUnifiedPlan_1.ReactNativeUnifiedPlan.createFactory();\n                    break;\n                }\n                case 'ReactNative': {\n                    this._handlerFactory = ReactNative_1.ReactNative.createFactory();\n                    break;\n                }\n                default: {\n                    throw new TypeError(`unknown handlerName \"${handlerName}\"`);\n                }\n            }\n        }\n        // Create a temporal handler to get its name.\n        const handler = this._handlerFactory();\n        this._handlerName = handler.name;\n        handler.close();\n        this._extendedRtpCapabilities = undefined;\n        this._recvRtpCapabilities = undefined;\n        this._canProduceByKind = {\n            audio: false,\n            video: false,\n        };\n        this._sctpCapabilities = undefined;\n    }\n    /**\n     * The RTC handler name.\n     */\n    get handlerName() {\n        return this._handlerName;\n    }\n    /**\n     * Whether the Device is loaded.\n     */\n    get loaded() {\n        return this._loaded;\n    }\n    /**\n     * RTP capabilities of the Device for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get rtpCapabilities() {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        return this._recvRtpCapabilities;\n    }\n    /**\n     * SCTP capabilities of the Device.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     */\n    get sctpCapabilities() {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        return this._sctpCapabilities;\n    }\n    get observer() {\n        return this._observer;\n    }\n    /**\n     * Initialize the Device.\n     */\n    async load({ routerRtpCapabilities, preferLocalCodecsOrder = false, }) {\n        logger.debug('load() [routerRtpCapabilities:%o]', routerRtpCapabilities);\n        // Temporal handler to get its capabilities.\n        let handler;\n        try {\n            if (this._loaded) {\n                throw new errors_1.InvalidStateError('already loaded');\n            }\n            // Clone given router RTP capabilities to not modify input data.\n            const clonedRouterRtpCapabilities = utils.clone(routerRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(clonedRouterRtpCapabilities);\n            handler = this._handlerFactory();\n            const nativeRtpCapabilities = await handler.getNativeRtpCapabilities();\n            logger.debug('load() | got native RTP capabilities:%o', nativeRtpCapabilities);\n            // Clone obtained native RTP capabilities to not modify input data.\n            const clonedNativeRtpCapabilities = utils.clone(nativeRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(clonedNativeRtpCapabilities);\n            // Get extended RTP capabilities.\n            this._extendedRtpCapabilities = ortc.getExtendedRtpCapabilities(clonedNativeRtpCapabilities, clonedRouterRtpCapabilities, preferLocalCodecsOrder);\n            logger.debug('load() | got extended RTP capabilities:%o', this._extendedRtpCapabilities);\n            // Check whether we can produce audio/video.\n            this._canProduceByKind.audio = ortc.canSend('audio', this._extendedRtpCapabilities);\n            this._canProduceByKind.video = ortc.canSend('video', this._extendedRtpCapabilities);\n            // Generate our receiving RTP capabilities for receiving media.\n            this._recvRtpCapabilities = ortc.getRecvRtpCapabilities(this._extendedRtpCapabilities);\n            // This may throw.\n            ortc.validateRtpCapabilities(this._recvRtpCapabilities);\n            logger.debug('load() | got receiving RTP capabilities:%o', this._recvRtpCapabilities);\n            // Generate our SCTP capabilities.\n            this._sctpCapabilities = await handler.getNativeSctpCapabilities();\n            logger.debug('load() | got native SCTP capabilities:%o', this._sctpCapabilities);\n            // This may throw.\n            ortc.validateSctpCapabilities(this._sctpCapabilities);\n            logger.debug('load() succeeded');\n            this._loaded = true;\n            handler.close();\n        }\n        catch (error) {\n            if (handler) {\n                handler.close();\n            }\n            throw error;\n        }\n    }\n    /**\n     * Whether we can produce audio/video.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    canProduce(kind) {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        else if (kind !== 'audio' && kind !== 'video') {\n            throw new TypeError(`invalid kind \"${kind}\"`);\n        }\n        return this._canProduceByKind[kind];\n    }\n    /**\n     * Creates a Transport for sending media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createSendTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData, }) {\n        logger.debug('createSendTransport()');\n        return this.createTransport({\n            direction: 'send',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData,\n        });\n    }\n    /**\n     * Creates a Transport for receiving media.\n     *\n     * @throws {InvalidStateError} if not loaded.\n     * @throws {TypeError} if wrong arguments.\n     */\n    createRecvTransport({ id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData, }) {\n        logger.debug('createRecvTransport()');\n        return this.createTransport({\n            direction: 'recv',\n            id: id,\n            iceParameters: iceParameters,\n            iceCandidates: iceCandidates,\n            dtlsParameters: dtlsParameters,\n            sctpParameters: sctpParameters,\n            iceServers: iceServers,\n            iceTransportPolicy: iceTransportPolicy,\n            additionalSettings: additionalSettings,\n            proprietaryConstraints: proprietaryConstraints,\n            appData: appData,\n        });\n    }\n    createTransport({ direction, id, iceParameters, iceCandidates, dtlsParameters, sctpParameters, iceServers, iceTransportPolicy, additionalSettings, proprietaryConstraints, appData, }) {\n        if (!this._loaded) {\n            throw new errors_1.InvalidStateError('not loaded');\n        }\n        else if (typeof id !== 'string') {\n            throw new TypeError('missing id');\n        }\n        else if (typeof iceParameters !== 'object') {\n            throw new TypeError('missing iceParameters');\n        }\n        else if (!Array.isArray(iceCandidates)) {\n            throw new TypeError('missing iceCandidates');\n        }\n        else if (typeof dtlsParameters !== 'object') {\n            throw new TypeError('missing dtlsParameters');\n        }\n        else if (sctpParameters && typeof sctpParameters !== 'object') {\n            throw new TypeError('wrong sctpParameters');\n        }\n        else if (appData && typeof appData !== 'object') {\n            throw new TypeError('if given, appData must be an object');\n        }\n        // Create a new Transport.\n        const transport = new Transport_1.Transport({\n            direction,\n            id,\n            iceParameters,\n            iceCandidates,\n            dtlsParameters,\n            sctpParameters,\n            iceServers,\n            iceTransportPolicy,\n            additionalSettings,\n            proprietaryConstraints,\n            appData,\n            handlerFactory: this._handlerFactory,\n            extendedRtpCapabilities: this._extendedRtpCapabilities,\n            canProduceByKind: this._canProduceByKind,\n        });\n        // Emit observer event.\n        this._observer.safeEmit('newtransport', transport);\n        return transport;\n    }\n}\nexports.Device = Device;\nfunction detectDeviceImpl(uaParserResult) {\n    // React-Native.\n    // NOTE: react-native-webrtc >= 1.75.0 is required.\n    // NOTE: For Unified-Plan support, react-native-webrtc version >= 106.0.0 is\n    // required.\n    if (typeof navigator === 'object' && navigator.product === 'ReactNative') {\n        logger.debug('detectDeviceImpl() | React-Native detected');\n        if (typeof RTCPeerConnection === 'undefined') {\n            logger.warn('detectDeviceImpl() | unsupported react-native-webrtc without RTCPeerConnection, forgot to call registerGlobals()?');\n            return undefined;\n        }\n        if (typeof RTCRtpTransceiver !== 'undefined') {\n            logger.debug('detectDeviceImpl() | ReactNative UnifiedPlan handler chosen');\n            return 'ReactNativeUnifiedPlan';\n        }\n        else {\n            logger.debug('detectDeviceImpl() | ReactNative PlanB handler chosen');\n            return 'ReactNative';\n        }\n    }\n    // Browser.\n    else {\n        logger.debug('detectDeviceImpl() | browser detected [userAgent:%s, parsed:%o]', uaParserResult.ua, uaParserResult);\n        const browser = uaParserResult.browser;\n        const browserName = browser.name?.toLowerCase();\n        const browserVersion = parseInt(browser.major ?? '0');\n        const engine = uaParserResult.engine;\n        const engineName = engine.name?.toLowerCase();\n        const os = uaParserResult.os;\n        const osName = os.name?.toLowerCase();\n        const osVersion = parseFloat(os.version ?? '0');\n        const device = uaParserResult.device;\n        const deviceModel = device.model?.toLowerCase();\n        const isIOS = osName === 'ios' || deviceModel === 'ipad';\n        const isChrome = browserName &&\n            [\n                'chrome',\n                'chromium',\n                'mobile chrome',\n                'chrome webview',\n                'chrome headless',\n            ].includes(browserName);\n        const isFirefox = browserName &&\n            ['firefox', 'mobile firefox', 'mobile focus'].includes(browserName);\n        const isSafari = browserName && ['safari', 'mobile safari'].includes(browserName);\n        const isEdge = browserName && ['edge'].includes(browserName);\n        // Chrome, Chromium, and Edge.\n        if ((isChrome || isEdge) && !isIOS && browserVersion >= 111) {\n            return 'Chrome111';\n        }\n        else if ((isChrome && !isIOS && browserVersion >= 74) ||\n            (isEdge && !isIOS && browserVersion >= 88)) {\n            return 'Chrome74';\n        }\n        else if (isChrome && !isIOS && browserVersion >= 70) {\n            return 'Chrome70';\n        }\n        else if (isChrome && !isIOS && browserVersion >= 67) {\n            return 'Chrome67';\n        }\n        else if (isChrome && !isIOS && browserVersion >= 55) {\n            return 'Chrome55';\n        }\n        // Firefox.\n        else if (isFirefox && !isIOS && browserVersion >= 120) {\n            return 'Firefox120';\n        }\n        else if (isFirefox && !isIOS && browserVersion >= 60) {\n            return 'Firefox60';\n        }\n        // Firefox on iOS (so Safari).\n        else if (isFirefox && isIOS && osVersion >= 14.3) {\n            return 'Safari12';\n        }\n        // Safari with Unified-Plan support enabled.\n        else if (isSafari &&\n            browserVersion >= 12 &&\n            typeof RTCRtpTransceiver !== 'undefined' &&\n            RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n            return 'Safari12';\n        }\n        // Safari with Plab-B support.\n        else if (isSafari && browserVersion >= 11) {\n            return 'Safari11';\n        }\n        // Old Edge with ORTC support.\n        else if (isEdge && !isIOS && browserVersion >= 11 && browserVersion <= 18) {\n            return 'Edge11';\n        }\n        // Best effort for WebKit based browsers in iOS.\n        else if (engineName === 'webkit' &&\n            isIOS &&\n            typeof RTCRtpTransceiver !== 'undefined' &&\n            RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection')) {\n            return 'Safari12';\n        }\n        // Best effort for Chromium based browsers.\n        else if (engineName === 'blink') {\n            // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n            const match = uaParserResult.ua.match(/(?:(?:Chrome|Chromium))[ /](\\w+)/i);\n            if (match) {\n                const version = Number(match[1]);\n                if (version >= 111) {\n                    return 'Chrome111';\n                }\n                else if (version >= 74) {\n                    return 'Chrome74';\n                }\n                else if (version >= 70) {\n                    return 'Chrome70';\n                }\n                else if (version >= 67) {\n                    return 'Chrome67';\n                }\n                else {\n                    return 'Chrome55';\n                }\n            }\n            else {\n                return 'Chrome111';\n            }\n        }\n        // Unsupported browser.\n        else {\n            logger.warn('detectDeviceImpl() | browser not supported [name:%s, version:%s]', browserName, browserVersion);\n            return undefined;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}